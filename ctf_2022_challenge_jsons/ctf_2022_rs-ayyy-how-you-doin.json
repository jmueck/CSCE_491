{
    ".gitignore": "/target\n",
    "Cargo.lock": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4361135be9122e0870de935d7c439aef945b9f9ddd4199a553b5270b49c82a27\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dde43e75fd43e8a1bf86103336bc699aa8d17ad1be60c76c0bdfd4828e19b78\"\ndependencies = [\n \"autocfg 1.1.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6b4d9b1225d28d360ec6a231d65af1fd99a2a095154c8040689617290569c5c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d6f2aa4d0537bcc1c74df8755072bd31c1ef1a3a1b85a68e8404a8c353b7b8b\"\n\n[[package]]\nname = \"crypto-bigint\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83bd3bb4314701c568e340cd8cf78c975aa0ca79e03d3f6d1677d5b0c9c0c03\"\ndependencies = [\n \"generic-array\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"der\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79b71cca7d95d7681a4b3b9cdf63c8dbc3730d0584c2c74e31416d64a90493f4\"\ndependencies = [\n \"const-oid\",\n \"crypto-bigint\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd48d33ec7f05fbfa152300fdad764757cbded343c1aa1cff2fbaf4134851803\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d39cd93900197114fa1fcb7ae84ca742095eed9442088988ae74fa744e930e77\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.120\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad5c14e80759d0939d013e6ca49930e59fc53dd8e5009132f76240c179380c09\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33a33a362ce288760ec6a508b94caaec573ae7d3bbbd91b87aa0bad4456839db\"\n\n[[package]]\nname = \"num-bigint-dig\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4547ee5541c18742396ae2c895d0717d0f886d8823b8399cdaf7b07d63ad0480\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"byteorder\",\n \"lazy_static\",\n \"libm\",\n \"num-integer\",\n \"num-iter\",\n \"num-traits\",\n \"rand\",\n \"smallvec\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2cc698a63b549a70bc047073d2949cce27cd1c7b0a4a862d08a8031bc2801db\"\ndependencies = [\n \"autocfg 1.1.0\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2021c8337a54d21aca0d59a92577a029af9431cb59b909b03252b9c164fad59\"\ndependencies = [\n \"autocfg 1.1.0\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290\"\ndependencies = [\n \"autocfg 1.1.0\",\n \"libm\",\n]\n\n[[package]]\nname = \"pem-rfc7468\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84e93a3b1cc0510b03020f33f21e62acdde3dcaef432edc95bea377fbd4c2cd4\"\ndependencies = [\n \"base64ct\",\n]\n\n[[package]]\nname = \"pkcs1\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"116bee8279d783c0cf370efa1a94632f2108e5ef0bb32df31f051647810a4e2c\"\ndependencies = [\n \"der\",\n \"pem-rfc7468\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee3ef9b64d26bad0536099c816c6734379e45bbd5f14798def6809e5cc350447\"\ndependencies = [\n \"der\",\n \"pem-rfc7468\",\n \"pkcs1\",\n \"spki\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb9f9e6e233e5c4a35559a617bf40a4ec447db2e84c20b55a6f83167b7e57872\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7342d5883fbccae1cc37a2353b09c87c9b0f3afd73f5fb9bba687a1f733b029\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"864d3e96a899863136fc6e99f3d7cae289dafe43bf2c5ac19b70df7210c0a145\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d34f1408f55294453790c48b2f1ebbb1c5b4b7563eb1f418bcfcfdbb06ebb4e7\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rngcache\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e908e09870816c7f58f115ebc2e5e5e4d1da7225132dc15ad67449032bcc8a51\"\ndependencies = [\n \"rand\",\n]\n\n[[package]]\nname = \"rs-ayyy-how-you-doin\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"rand\",\n \"rand_chacha\",\n \"rngcache\",\n \"rsa\",\n]\n\n[[package]]\nname = \"rsa\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e05c2603e2823634ab331437001b411b9ed11660fbc4066f3908c84a9439260d\"\ndependencies = [\n \"byteorder\",\n \"digest\",\n \"lazy_static\",\n \"num-bigint-dig\",\n \"num-integer\",\n \"num-iter\",\n \"num-traits\",\n \"pkcs1\",\n \"pkcs8\",\n \"rand\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2dd574626839106c320a323308629dcb1acfc96e32a8cba364ddc61ac23ee83\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c01a0c15da1b0b0e1494112e7af814a678fec9bd157881b49beac661e9b6f32\"\ndependencies = [\n \"der\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.88\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebd69e719f31e88618baa1eaa6ee2de5c9a1c004f1e9ecdb58e8352a13f20a01\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f36bdaa60a83aca3921b5259d5400cbf5e90fc51931376a9bd4a0eb79aa7210f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcf81ac59edc17cc8697ff311e8f5ef2d99fcbd9817b34cec66f90b6c3dfd987\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ccb82d61f80a663efe1f787a51b16b5a51e3314d6ac365b08639f52387b33f3\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.2+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd6fbd9a79829dd1ad0cc20627bf1ed606756a7f77edff7b66b7064f9cb327c6\"\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d68d9dcec5f9b43a30d38c49f91dfedfaac384cb8f085faca366c26207dd1619\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f8f187641dad4f680d25c4bfc4225b418165984179f26ca76ec4fb6441d3a17\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n",
    "Cargo.toml": "[package]\nname = \"rs-ayyy-how-you-doin\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nanyhow = \"1\"\nhex = \"0.4\"\nrand = \"0.8\"\nrand_chacha = \"0.3\"\nrngcache = \"0.1.3\"\nrsa = \"0.5\"\n\n[profile.dev.package.num-bigint-dig]\nopt-level = 3\n",
    "Dockerfile": "FROM rust as build\n\nADD src /opt/rs-ayyy-how-you-doin/src\nADD Cargo.toml /opt/rs-ayyy-how-you-doin/Cargo.toml\nADD flag.txt /opt/rs-ayyy-how-you-doin/flag.txt\n\nWORKDIR /opt/rs-ayyy-how-you-doin\n\nRUN cargo build --release\n\nFROM ubuntu\n\nRUN apt update; apt -y install socat\nCOPY --from=build /opt/rs-ayyy-how-you-doin/target/release/rs-ayyy-how-you-doin /usr/bin/rs-ayyy-how-you-doin\n\nEXPOSE 8320\n\nENTRYPOINT [\"sh\", \"-c\", \"exec socat -d -d TCP-LISTEN:8320,reuseaddr,fork EXEC:'timeout 5m rs-ayyy-how-you-doin',stderr\"]\n",
    "flag.txt": "gigem{lol_omg_im_so_random}\n",
    "README.md": "# RSAyyy how you doin?\n\n## Description\n\nWe need you to demonstrate your worth as a hacker -- break some 4096-bit RSA keys and we'll know you know your stuff.\n\nFiles src/main.rs and Cargo.toml are provided to the user.\n\n## Solution\n\nOut of all the dependencies in `Cargo.toml`, `rngcache` looks particularly sus. Reading the source on [docs.rs](https://docs.rs/rngcache/latest/src/rngcache/lib.rs.html#28) shows that it caches previous calls to `fill_bytes`. Presumably, this compromises secret key generation since the bytes of one prime would be reused with another. To verify this, I printed out the primes by modifying the provided code:\n```diff\n     let privkey = RsaPrivateKey::new(&mut rng, 4096)?;\n+    let primes = privkey.primes();\n+    println!(\"{}\", hex::encode(primes[0].to_bytes_be()));\n+    println!(\"{}\", hex::encode(primes[1].to_bytes_be()));\n```\nSample output:\n```\ndbaf4f08c4e25b51f319324ab42e7a0e6bb1265fa43fd9f9b38621a1eab004c8ce9d2c5974ea14860ed9b21594e7bed2d757950040fdfbb07da7ad966dd051751b89994319570bd5eb0af808cc42d6d2729ade501bee1937ec0a12796456f6f32507797e5e82788b03aeac7e5531cff8a5d1bda8db206dd2c4356167c8942b543eeab29da399b9ab9b5da351a9ee3a9ba7f8c88c49805499ed31394fe0f6f3fc14636d2c57986e54a0ba26c241657be5a63258d7072470edeac3acf87741268343e2d42730d9b1d73752b21de7390ea7a3e9eb39e1d3cb35d07b040c4bc34d54cf00e69a35dde3a7be2def5932119db567857e7d093f43a6aa2333f24788ec83\ndbaf4f08c4e25b51f319324ab42e7a0e6bb1265fa43fd9f9b38621a1eab004c8ce9d2c5974ea14860ed9b21594e7bed2d757950040fdfbb07da7ad966dd051751b89994319570bd5eb0af808cc42d6d2729ade501bee1937ec0a12796456f6f32507797e5e82788b03aeac7e5531cff8a5d1bda8db206dd2c4356167c894b20b84c59be5b0fe0b7298b2cb315c4bfbd769b0d5374d16af2b7b823207192f2d02a0e7d7fc485c91a3fe763f109fd1a88b72577117e03f99254869c3f2d1e594567e748bdbe2e78ffb01435a94e2362413d79d875697a61f262de746fded69fce6bf733f49556bf7c014703aa4a5f2e2a33db2dcb174c87d5d30b6743b4964aff9\n```\nWe can see that the primes generated secret key the primes share several of the most significant bytes, so we know that P and Q are relatively close. As a result, Fermat's algorithm seems like a good candidate. I copied the public key into `tmp.pem` then threw it at [RsaCtfTool](https://github.com/Ganapati/RsaCtfTool) with an extended timeout:\n```sh\n\u276f RsaCtfTool.py --publickey tmp.pem --attack fermat --timeout 600 --private\n\n[*] Testing key tmp.pem.\n[*] Performing fermat attack on tmp.pem.\n[*] Attack success with fermat method !\n```\n\nI saved the printed secret key into `private.pem`, then wrote some Rust to decrypt the challenge string and print out the plaintext (your ciphertext will be different):\n```rust\nuse rsa::{RsaPrivateKey, pkcs1::DecodeRsaPrivateKey, PaddingScheme};\n\nfn main() {\n    let secret = RsaPrivateKey::from_pkcs1_pem(include_str!(\"./private.pem\")).unwrap();\n    let ct = hex::decode(\"36f1e2707f446d4f15712cc6253cb8f9a5c55540d418c649d6e122175f52c58246db78fc1260dc8333fe126eb811d622e3149f50eebb35ebe2973816eb7ea6a34892f9a53a518cc4ec3709fc6970148a84bcf23a5d683d5040630b10a691211951f2f5c41476cb4a961cd0c9d30566001da0c45a970d01817f0a5cc773c212b05ad94a201538841bb50bde4cd1d036da4daca6a7837c82de3d483161621ee8e1a53edbf4399bf6f560d2ac2a023311dbb3f20d3ff8b3516971c8383f2704393ad53bc2f62779ea02140afd88f53a6f53ba8936a8c1f418efeb30aeb9949bb8e76034142c8148e706c912272c276a318e69f9734211387baea516c11bdd0703b985b8223f0793b407b144e4630346617a5f23b4cf15548cb8e2a6a4c0bf5b49fdc401526c875caae8f69cd9d9029da25d2b8963bf3f0760745cf423f242cce171604e0c06964d0be75a4237c85b24549ee3aac76305b4a92ae740196a3bdb8f84450f9abb07b04a2c73ad5c581fbd276650ca23e0af597444c2b827e10daaab78bbe69518798ee77d1c8583ee7b422227cb631734dc9e83ee6fd412fa87dd23f09225b3c59c34cb114905aaec11e1038548acc549b3d8b75ced2b89e5ed9c8ccc6122e9da052cd32191446c0b263aa48ba3574ba40d521d23320a9e337f5961ee876739e6f03cbb1ea347ada055ee969e5e09b5be41dc1df0da6e8d84a0e8c354\").unwrap();\n    let pt = secret.decrypt(PaddingScheme::PKCS1v15Encrypt, &ct).unwrap();\n    println!(\"{}\", String::from_utf8(pt).unwrap());\n}\n```\nSubmitting the plaintext to the server (for this particular session) yields the flag.\n\nFlag: `gigem{lol_omg_im_so_random}`\n\n\n",
    "src\\main.rs": "use rand::distributions::Alphanumeric;\nuse rand::Rng;\nuse rand_chacha::rand_core::SeedableRng;\nuse rand_chacha::ChaCha20Rng;\nuse rngcache::RngCache;\nuse rsa::pkcs8::ToPublicKey;\nuse rsa::{PaddingScheme, PublicKey, RsaPrivateKey, RsaPublicKey};\nuse std::io::{stdin, BufRead};\n\nfn main() -> anyhow::Result<()> {\n    let rng = ChaCha20Rng::from_entropy();\n    let mut rng = RngCache::new(rng);\n    let privkey = RsaPrivateKey::new(&mut rng, 4096)?;\n    let pubkey = RsaPublicKey::from(&privkey);\n    let encoded = pubkey.to_public_key_pem()?;\n\n    println!(\"{}\", encoded);\n\n    let message = std::iter::repeat_with(|| rng.sample(&Alphanumeric))\n        .take(1 << 6)\n        .collect::<Vec<_>>();\n\n    println!(\"Please decrypt the following message: \");\n    let cipher = pubkey.encrypt(&mut rng, PaddingScheme::PKCS1v15Encrypt, &message)?;\n    println!(\"{}\", hex::encode(cipher));\n\n    let mut attempt = String::new();\n    stdin().lock().read_line(&mut attempt)?;\n    if attempt.trim().as_bytes() == message {\n        println!(\"{}\", include_str!(\"../flag.txt\"));\n    } else {\n        println!(\"That was not the correct string. Sorry!\");\n    }\n\n    Ok(())\n}\n",
    "category": "crypto"
}