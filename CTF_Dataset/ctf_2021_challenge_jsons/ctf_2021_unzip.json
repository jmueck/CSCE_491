{
    "chall.zip": "[Binary file or unsupported type: zip]",
    "challenge.py": "from hacksport.operations import execute\nfrom hacksport.problem import Challenge, File\n\n\nclass Problem(Challenge):\n    def setup(self):\n        self.files = [File(\"chall.zip\")]\n\n    def generate_flag(self, random):\n        return r\"gigem{d0esnt_looK_lik3_5t4rs_t0_M3}\"\n",
    "problem.json": "\n{\n  \"name\": \"Unzip\",\n  \"category\": \"Forensics\",\n  \"description\": \"Hey, can you unzip this for me? {{url_for('chall.zip')}}\",\n  \"score\" : 100,\n  \"hints\": [\"\"],\n  \"walkthrough\": \"check our github or something\",\n  \"author\": \"Matthew Le\",\n  \"organization\": \"TAMUctf\",\n  \"event\": \"TAMUctf 2021\"\n}\n",
    "README.md": "# Unzip\n\n## Description\n\nHey, can you unzip this for me?\n\n## Solution\n\n`gigem{d0esnt_looK_lik3_5t4rs_t0_M3}` yes it seems\n\nzip2john can be used to convert a password locked zip file into a hash but it gives too much data for hashcat so I use `cut` to grab the second field delimited by colons. \n\n`zip2john chall.zip | cut -d ':' -f2 > zip.hash`\n\n```text\n\u276f hashcat --help | grep -i pkzip\n  17200 | PKZIP (Compressed)                               | Archives\n  17220 | PKZIP (Compressed Multi-File)                    | Archives\n  17225 | PKZIP (Mixed Multi-File)                         | Archives\n  17230 | PKZIP (Mixed Multi-File Checksum-Only)           | Archives\n  17210 | PKZIP (Uncompressed)                             | Archives\n  20500 | PKZIP Master Key                                 | Archives\n  20510 | PKZIP Master Key (6 byte optimization)           | Archives\n```\nAt this point it depends a little bit on what sort of zip file it is, I was lazy so i just went down the line and tried until it worked.  I operated under the assumption that it'd probably be in rockyou and I was right.  \n```text\n\u276f hashcat -a0 -m17210 zip.hash ~/Downloads/rockyou.txt\n...\n\u276f hashcat -a0 -m17210 zip.hash ~/Downloads/rockyou.txt --show\n$pkzip2$1*2*2*0*30*24*75c0f8c7*0*42*0*30*75c0*b004*e980ad8b1ffd804291d329b24794613bf3484fa6292fd97a57836440dfce9ce753a89d0ad9a8b16b042ecee459ed1274*$/pkzip2$:hunter2```\n",
    "category": "forensics"
}