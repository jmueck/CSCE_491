{
    "Dockerfile": "FROM alpine\n\nRUN apk --no-cache add socat python3\nRUN addgroup ctf\nRUN mkdir /misc\nRUN adduser -G ctf --home=/misc --disabled-password ctfuser\n\nCOPY server.py /misc/server.py\nCOPY flag.txt /misc/flag.txt\nCOPY start.sh /misc/start.sh\n\nRUN chown -R ctfuser /misc\n\nEXPOSE 8573\n\nENTRYPOINT [\"/misc/start.sh\"]\n",
    "flag.txt": "gigem{g00d_job_yOu_h4aaxx0rrR}\n",
    "README.md": "# RSAPWN\n\n## Description\n\n```text\nWe must train the next generation of hackers.\nnc <ip here> 8573\n```\n\n## Documentation\n\n\n### Setup\n\n1. `docker build -t rsapwn .`\n2. `docker run -p 8573:8573 -d rsapwn`\n\n## Solution\n\nJust have to write a script to factor in O(\\sqrt{n}).\n",
    "server.py": "import time\nimport random\n\nprimes = [9998279, 9998281, 9998309, 9998321, 9998323, 9998333, 9998377, 9998381, 9998393, 9998413, 9998423, 9998441, 9998447, 9998459, 9998479, 9998539, 9998543, 9998557, 9998561, 9998581, 9998587, 9998603, 9998623, 9998633, 9998641, 9998689, 9998699, 9998701, 9998719, 9998741, 9998743, 9998749, 9998753, 9998777, 9998797, 9998801, 9998809, 9998851, 9998861, 9998867, 9998887, 9998893, 9998903, 9998929, 9998969, 9998971, 9998977, 9999047, 9999049, 9999053, 9999071, 9999083, 9999161, 9999163, 9999167, 9999193, 9999217, 9999221, 9999233, 9999271, 9999277, 9999289, 9999299, 9999317, 9999337, 9999347, 9999397, 9999401, 9999419, 9999433, 9999463, 9999469, 9999481, 9999511, 9999533, 9999593, 9999601, 9999637, 9999653, 9999659, 9999667, 9999677, 9999713, 9999739, 9999749, 9999761, 9999823, 9999863, 9999877, 9999883, 9999889, 9999901, 9999907, 9999929, 9999931, 9999937, 9999943, 9999971, 9999973, 9999991]\n\ndef go():\n    print('We must train future hackers to break RSA quickly. Here is how this will work.\\nI will multiply together two big primes (<= 10000000), give you the result,\\nand you must reply to me in less than two seconds telling me what primes I\\nmultiplied.', flush=True)\n    print()\n    print('Press enter when you are ready.', flush=True)\n    input()\n\n    i = random.randint(0, len(primes)-1)\n    j = random.randint(0, len(primes)-1)\n    print(primes[i]*primes[j], flush=True)\n    t = time.time()\n    a, b = map(int, input().split())\n    t1 = time.time()\n    if t1-t > 2:\n        print('Too slow :(', flush=True)\n        return\n\n    if a*b != primes[i]*primes[j]:\n        print('Wrong answer :(', flush=True)\n        return\n\n    with open('flag.txt', 'r') as flagfile:\n        print('Good job :)', flush=True)\n        print(flagfile.read(), flush=True)\n\n\nif __name__ == '__main__':\n    go()\n",
    "solver.py": "from pwn import *\nimport time\n\nr = remote('127.0.0.1', 8573)\nr.sendline('')\nr.recvline()\nr.recvline()\nr.recvline()\nr.recvline()\nr.recvline()\nr.recvline()\np = int(r.recvline())\nfor i in range(2,10000001):\n    if p%i==0:\n        r.sendline(str(i) + ' ' + str(p//i))\n        r.recvline()\n        print(r.recvline().decode('utf-8'), end='')\n        exit()\n",
    "start.sh": "#!/bin/sh\n\nwhile : \ndo\n    su -c \"exec socat -d tcp-listen:8573,reuseaddr,fork exec:\\\"python3 /misc/server.py\\\",stderr\" - ctfuser;\ndone\n",
    "category": "Misc"
}