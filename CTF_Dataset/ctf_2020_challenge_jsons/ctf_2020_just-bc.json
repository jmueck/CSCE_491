{
    ".gitignore": "target/\n.idea/\nvenv/\n*.bin\n*.bc\n*.s\njust-bc\n",
    "build.sh": "#!/bin/bash\n\nCARGO_INCREMENTAL=0 cargo rustc --release -- --emit llvm-bc\ncp target/release/deps/*.bc just-bc.bin\n",
    "Cargo.lock": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"bytes\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"130aac562c0dd69c56b3b1cc8ffd2e17be31d0b6c25b61c96b76231aa23e39e1\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"fuchsia-zircon\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\ndependencies = [\n \"bitflags\",\n \"fuchsia-zircon-sys\",\n]\n\n[[package]]\nname = \"fuchsia-zircon-sys\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1010591b26bbfe835e9faeabeb11866061cc7dcebffd56ad7d0942d0e61aefd8\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"just-bc\"\nversion = \"0.1.0\"\ndependencies = [\n \"tokio\",\n]\n\n[[package]]\nname = \"kernel32-sys\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb147597cdf94ed43ab7a9038716637d2d1bf2bc571da995d0028dec06bd3018\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400\"\n\n[[package]]\nname = \"mio\"\nversion = \"0.6.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"302dec22bcf6bae6dfb69c647187f4b4d0fb6f535521f7bc022430ce8e12008f\"\ndependencies = [\n \"cfg-if\",\n \"fuchsia-zircon\",\n \"fuchsia-zircon-sys\",\n \"iovec\",\n \"kernel32-sys\",\n \"libc\",\n \"log\",\n \"miow\",\n \"net2\",\n \"slab\",\n \"winapi 0.2.8\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919\"\ndependencies = [\n \"kernel32-sys\",\n \"net2\",\n \"winapi 0.2.8\",\n \"ws2_32-sys\",\n]\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42550d9fb7b6684a6d404d9fa7250c2eb2646df731d1c06afc06dcee9e1bcf88\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"winapi 0.3.8\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46203554f085ff89c235cd12f7075f3233af9b11ed7c9e16dfe2560d03313ce6\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"237844750cfbb86f67afe27eee600dfbbcb6188d734139b534cbfbf4f96792ae\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c09721c6781493a2a492a96b5a5bf19b65917fe6728884e7c44dd0c60ca3435\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053a8c8bcc71fcce321828dc897a98ab9760bef03a4fc36693c231e5b3216cfe\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"123bd9499cfb380418d509322d7a6d52e5315f064fe4b3ad18a53d6b92c07859\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa5e81d6bc4e67fe889d5783bd2a128ab2e0cfa487e0be16b6a8d177b101616\"\ndependencies = [\n \"bytes\",\n \"iovec\",\n \"lazy_static\",\n \"memchr\",\n \"mio\",\n \"num_cpus\",\n \"pin-project-lite\",\n \"tokio-macros\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0c3acc6aa564495a0f2e1d59fab677cd7f81a19994cfc7f3ad0e64301560389\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"826e7639553986605ec5979c7dd957c7895e93eabed50ab2ffa7f6128a75097c\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8093091eeb260906a183e6ae1abdba2ef5ef2257a21801128899c3fc699229c6\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-build\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"ws2_32-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n",
    "Cargo.toml": "[package]\nname = \"just-bc\"\nversion = \"0.1.0\"\nauthors = [\"Addison Crump <addisoncrump@tamu.edu>\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\ntokio = { version = \"0.2.0\", features = [\"dns\", \"io-util\", \"macros\", \"rt-threaded\", \"tcp\"] }\n\n[[bin]]\nname = \"just-bc\"\npath = \"src/main.rs\"\n",
    "Dockerfile": "FROM rust as build\n\nWORKDIR /tmp\nRUN USER=root cargo init\nCOPY Cargo.toml /tmp/Cargo.toml\nCOPY Cargo.lock /tmp/Cargo.lock\nRUN cargo build --release\n\nCOPY src/main.rs /tmp/src/main.rs\nCOPY password.txt /tmp/password.txt\nRUN cargo clean\nRUN cargo build --release\n\nFROM debian:buster-slim\n\nCOPY --from=build /tmp/target/release/just-bc /usr/bin/just-bc\nCOPY flag.txt /flag.txt\n\nEXPOSE 4932\n\nENTRYPOINT [\"/usr/bin/just-bc\"]\n",
    "flag.txt": "gigem{hmm_yes_interesting_very_interesting}",
    "password.txt": "lmaoniceonebuddypalfriendolino",
    "README.md": "# Just BC\n\nA blind reversing of an uncommon bitcode from top to bottom. Have fun!\n\n## Description\n\n```\nWe found this reference file for a program contained by a remote server, but we have no idea what it is.\nAll we know is that whenever we connect there's a password prompt. Can you figure out what that password is?\n\nThe live instance is at 172.17.0.2:4932.\n```\n\nContestants will be provided with just-bc.bin, generated by `./build.sh`.\nIf you don't have rust installed, just ask Addison for a copy!\n\n## Running\n\n1. `docker build -t just-bc .`\n2. `docker run --rm --read-only just-bc`\n\n## Solution\n\n1. Determine that the file is an LLVM-BC file.\n2. Compile it to assembly with `llc`\n3. `cat just_bc.s | grep \"ascii\" | grep -B 3 -A 3 \"Password\"`\n4. `nc 172.17.0.2 4932`\n5. `lmaoniceonebuddypalfriendolino`\n6. Profit",
    "src\\main.rs": "use std::error::Error;\nuse std::fs::File;\nuse std::io::Read;\n\nuse tokio;\nuse tokio::io::BufReader;\nuse tokio::net::TcpListener;\nuse tokio::prelude::*;\n\nfn confirm(attempt: &String) -> bool {\n    let password = include_str!(\"../password.txt\").to_string();\n\n    attempt.eq(&password)\n}\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn Error>> {\n    let addr = \"0.0.0.0:4932\";\n    let mut listener = TcpListener::bind(addr).await?;\n\n    loop {\n        let mut socket = listener.accept().await?.0;\n\n        tokio::spawn(async move {\n            let (rsocket, mut wsocket) = socket.split();\n            let mut reader = BufReader::new(rsocket);\n            loop {\n                wsocket\n                    .write(b\"Password: \")\n                    .await\n                    .expect(\"failed to write data to socket\");\n\n                let mut attempt = String::new();\n                reader\n                    .read_line(&mut attempt)\n                    .await\n                    .expect(\"couldn't read from input stream\");\n                attempt.pop().unwrap(); // remove that pesky newline\n                println!(\"Captured attempt: {}\", attempt);\n\n                let mut resp = String::new();\n                if confirm(&attempt) {\n                    File::open(\"/flag.txt\")\n                        .expect(\"flag.txt wasn't found\")\n                        .read_to_string(&mut resp)\n                        .expect(\"flag.txt wasn't readable\");\n                } else {\n                    resp += \"lmao nice try, but that's not it\";\n                }\n                resp.push('\\n');\n\n                wsocket\n                    .write(resp.as_bytes())\n                    .await\n                    .expect(\"failed to write data to socket\");\n            }\n        });\n    }\n}\n",
    "category": "Reversing"
}